// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/hyperledger/fabric-sdk-go/pkg/fabsdk/api (interfaces: CoreProviders,SvcProviders,Providers,CoreProviderFactory,ServiceProviderFactory,OrgClientFactory,SessionClientFactory)

package mock_api

import (
	gomock "github.com/golang/mock/gomock"
	apiconfig "github.com/hyperledger/fabric-sdk-go/api/apiconfig"
	apicryptosuite "github.com/hyperledger/fabric-sdk-go/api/apicryptosuite"
	apifabclient "github.com/hyperledger/fabric-sdk-go/api/apifabclient"
	chclient "github.com/hyperledger/fabric-sdk-go/api/apitxn/chclient"
	resmgmtclient "github.com/hyperledger/fabric-sdk-go/api/apitxn/resmgmtclient"
	kvstore "github.com/hyperledger/fabric-sdk-go/api/kvstore"
	api "github.com/hyperledger/fabric-sdk-go/pkg/fabsdk/api"
)

// MockCoreProviders interface
type MockCoreProviders struct {
	ctrl     *gomock.Controller
	recorder *_MockCoreProvidersRecorder
}

// Recorder for MockCoreProviders (not exported)
type _MockCoreProvidersRecorder struct {
	mock *MockCoreProviders
}

// NewMockCoreProviders creates a new mock instance
func NewMockCoreProviders(ctrl *gomock.Controller) *MockCoreProviders {
	mock := &MockCoreProviders{ctrl: ctrl}
	mock.recorder = &_MockCoreProvidersRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCoreProviders) EXPECT() *_MockCoreProvidersRecorder {
	return _m.recorder
}

// Config mocks base method
func (_m *MockCoreProviders) Config() apiconfig.Config {
	ret := _m.ctrl.Call(_m, "Config")
	ret0, _ := ret[0].(apiconfig.Config)
	return ret0
}

// Config indicates an expected call of Config
func (_mr *_MockCoreProvidersRecorder) Config() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Config")
}

// CryptoSuite mocks base method
func (_m *MockCoreProviders) CryptoSuite() apicryptosuite.CryptoSuite {
	ret := _m.ctrl.Call(_m, "CryptoSuite")
	ret0, _ := ret[0].(apicryptosuite.CryptoSuite)
	return ret0
}

// CryptoSuite indicates an expected call of CryptoSuite

func (_mr *_MockCoreProvidersRecorder) CryptoSuite() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CryptoSuite")
}

// FabricProvider mocks base method
func (_m *MockCoreProviders) FabricProvider() api.FabricProvider {
	ret := _m.ctrl.Call(_m, "FabricProvider")
	ret0, _ := ret[0].(api.FabricProvider)
	return ret0
}

// FabricProvider indicates an expected call of FabricProvider
func (_mr *_MockCoreProvidersRecorder) FabricProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FabricProvider")
}

// SigningManager mocks base method
func (_m *MockCoreProviders) SigningManager() apifabclient.SigningManager {
	ret := _m.ctrl.Call(_m, "SigningManager")
	ret0, _ := ret[0].(apifabclient.SigningManager)
	return ret0
}

// SigningManager indicates an expected call of SigningManager
func (_mr *_MockCoreProvidersRecorder) SigningManager() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SigningManager")
}

// StateStore mocks base method
func (_m *MockCoreProviders) StateStore() kvstore.KVStore {
	ret := _m.ctrl.Call(_m, "StateStore")
	ret0, _ := ret[0].(kvstore.KVStore)
	return ret0
}

// StateStore indicates an expected call of StateStore
func (_mr *_MockCoreProvidersRecorder) StateStore() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StateStore")
}

// MockSvcProviders interface
type MockSvcProviders struct {
	ctrl     *gomock.Controller
	recorder *_MockSvcProvidersRecorder
}

// Recorder for MockSvcProviders (not exported)
type _MockSvcProvidersRecorder struct {
	mock *MockSvcProviders
}

// NewMockSvcProviders creates a new mock instance
func NewMockSvcProviders(ctrl *gomock.Controller) *MockSvcProviders {
	mock := &MockSvcProviders{ctrl: ctrl}
	mock.recorder = &_MockSvcProvidersRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockSvcProviders) EXPECT() *_MockSvcProvidersRecorder {
	return _m.recorder
}

// ChannelProvider mocks base method
func (_m *MockSvcProviders) ChannelProvider() apifabclient.ChannelProvider {
	ret := _m.ctrl.Call(_m, "ChannelProvider")
	ret0, _ := ret[0].(apifabclient.ChannelProvider)
	return ret0
}

// ChannelProvider indicates an expected call of ChannelProvider
func (_mr *_MockSvcProvidersRecorder) ChannelProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ChannelProvider")
}

//DiscoveryProvider discovery provider
func (_m *MockSvcProviders) DiscoveryProvider() apifabclient.DiscoveryProvider {
	ret := _m.ctrl.Call(_m, "DiscoveryProvider")
	ret0, _ := ret[0].(apifabclient.DiscoveryProvider)
	return ret0
}

// DiscoveryProvider indicates an expected call of DiscoveryProvider
func (_mr *_MockSvcProvidersRecorder) DiscoveryProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DiscoveryProvider")
}

// SelectionProvider mocks base method
func (_m *MockSvcProviders) SelectionProvider() apifabclient.SelectionProvider {
	ret := _m.ctrl.Call(_m, "SelectionProvider")
	ret0, _ := ret[0].(apifabclient.SelectionProvider)
	return ret0
}

// SelectionProvider indicates an expected call of SelectionProvider
func (_mr *_MockSvcProvidersRecorder) SelectionProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SelectionProvider")
}

// MockProviders interface
type MockProviders struct {
	ctrl     *gomock.Controller
	recorder *_MockProvidersRecorder
}

// Recorder for MockProviders (not exported)
type _MockProvidersRecorder struct {
	mock *MockProviders
}

// NewMockProviders creates a new mock instance
func NewMockProviders(ctrl *gomock.Controller) *MockProviders {
	mock := &MockProviders{ctrl: ctrl}
	mock.recorder = &_MockProvidersRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockProviders) EXPECT() *_MockProvidersRecorder {
	return _m.recorder
}

// ChannelProvider mocks base method
func (_m *MockProviders) ChannelProvider() apifabclient.ChannelProvider {
	ret := _m.ctrl.Call(_m, "ChannelProvider")
	ret0, _ := ret[0].(apifabclient.ChannelProvider)
	return ret0
}

// ChannelProvider indicates an expected call of ChannelProvider
func (_mr *_MockProvidersRecorder) ChannelProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ChannelProvider")
}

// Config mocks base method
func (_m *MockProviders) Config() apiconfig.Config {
	ret := _m.ctrl.Call(_m, "Config")
	ret0, _ := ret[0].(apiconfig.Config)
	return ret0
}

// Config indicates an expected call of Config
func (_mr *_MockProvidersRecorder) Config() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Config")
}

// CryptoSuite mocks base method
func (_m *MockProviders) CryptoSuite() apicryptosuite.CryptoSuite {
	ret := _m.ctrl.Call(_m, "CryptoSuite")
	ret0, _ := ret[0].(apicryptosuite.CryptoSuite)
	return ret0
}

// CryptoSuite indicates an expected call of CryptoSuite
func (_mr *_MockProvidersRecorder) CryptoSuite() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CryptoSuite")
}

// DiscoveryProvider mocks base method
func (_m *MockProviders) DiscoveryProvider() apifabclient.DiscoveryProvider {
	ret := _m.ctrl.Call(_m, "DiscoveryProvider")
	ret0, _ := ret[0].(apifabclient.DiscoveryProvider)
	return ret0
}

// DiscoveryProvider indicates an expected call of DiscoveryProvider
func (_mr *_MockProvidersRecorder) DiscoveryProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DiscoveryProvider")
}

// FabricProvider mocks base method
func (_m *MockProviders) FabricProvider() api.FabricProvider {
	ret := _m.ctrl.Call(_m, "FabricProvider")
	ret0, _ := ret[0].(api.FabricProvider)
	return ret0
}

// FabricProvider indicates an expected call of FabricProvider
func (_mr *_MockProvidersRecorder) FabricProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FabricProvider")
}

// SelectionProvider mocks base method
func (_m *MockProviders) SelectionProvider() apifabclient.SelectionProvider {
	ret := _m.ctrl.Call(_m, "SelectionProvider")
	ret0, _ := ret[0].(apifabclient.SelectionProvider)
	return ret0
}

// SelectionProvider indicates an expected call of SelectionProvider
func (_mr *_MockProvidersRecorder) SelectionProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SelectionProvider")
}

// SigningManager mocks base method
func (_m *MockProviders) SigningManager() apifabclient.SigningManager {
	ret := _m.ctrl.Call(_m, "SigningManager")
	ret0, _ := ret[0].(apifabclient.SigningManager)
	return ret0
}

// SigningManager indicates an expected call of SigningManager
func (_mr *_MockProvidersRecorder) SigningManager() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SigningManager")
}

// StateStore mocks base method
func (_m *MockProviders) StateStore() kvstore.KVStore {
	ret := _m.ctrl.Call(_m, "StateStore")
	ret0, _ := ret[0].(kvstore.KVStore)
	return ret0
}

//StateStore state store
func (_mr *_MockProvidersRecorder) StateStore() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StateStore")
}

// MockCoreProviderFactory interface
type MockCoreProviderFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockCoreProviderFactoryRecorder
}

// Recorder for MockCoreProviderFactory (not exported)
type _MockCoreProviderFactoryRecorder struct {
	mock *MockCoreProviderFactory
}

// NewMockCoreProviderFactory creates a new mock instance
func NewMockCoreProviderFactory(ctrl *gomock.Controller) *MockCoreProviderFactory {
	mock := &MockCoreProviderFactory{ctrl: ctrl}
	mock.recorder = &_MockCoreProviderFactoryRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCoreProviderFactory) EXPECT() *_MockCoreProviderFactoryRecorder {
	return _m.recorder
}

//NewCryptoSuiteProvider new provider
func (_m *MockCoreProviderFactory) NewCryptoSuiteProvider(_param0 apiconfig.Config) (apicryptosuite.CryptoSuite, error) {
	ret := _m.ctrl.Call(_m, "NewCryptoSuiteProvider", _param0)
	ret0, _ := ret[0].(apicryptosuite.CryptoSuite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewCryptoSuiteProvider mocks base method
func (_mr *_MockCoreProviderFactoryRecorder) NewCryptoSuiteProvider(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewCryptoSuiteProvider", arg0)
}

// NewFabricProvider mocks base method
func (_m *MockCoreProviderFactory) NewFabricProvider(_param0 apifabclient.ProviderContext) (api.FabricProvider, error) {
	ret := _m.ctrl.Call(_m, "NewFabricProvider", _param0)
	ret0, _ := ret[0].(api.FabricProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewFabricProvider indicates an expected call of NewFabricProvider
func (_mr *_MockCoreProviderFactoryRecorder) NewFabricProvider(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewFabricProvider", arg0)
}

// NewSigningManager mocks base method
func (_m *MockCoreProviderFactory) NewSigningManager(_param0 apicryptosuite.CryptoSuite, _param1 apiconfig.Config) (apifabclient.SigningManager, error) {
	ret := _m.ctrl.Call(_m, "NewSigningManager", _param0, _param1)
	ret0, _ := ret[0].(apifabclient.SigningManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewSigningManager indicates an expected call of NewSigningManager
func (_mr *_MockCoreProviderFactoryRecorder) NewSigningManager(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewSigningManager", arg0, arg1)
}

// NewStateStoreProvider mocks base method
func (_m *MockCoreProviderFactory) NewStateStoreProvider(_param0 apiconfig.Config) (kvstore.KVStore, error) {
	ret := _m.ctrl.Call(_m, "NewStateStoreProvider", _param0)
	ret0, _ := ret[0].(kvstore.KVStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewStateStoreProvider indicates an expected call of NewStateStoreProvider
func (_mr *_MockCoreProviderFactoryRecorder) NewStateStoreProvider(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewStateStoreProvider", arg0)
}

// MockServiceProviderFactory interface
type MockServiceProviderFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockServiceProviderFactoryRecorder
}

// Recorder for MockServiceProviderFactory (not exported)
type _MockServiceProviderFactoryRecorder struct {
	mock *MockServiceProviderFactory
}

// NewMockServiceProviderFactory creates a new mock instance
func NewMockServiceProviderFactory(ctrl *gomock.Controller) *MockServiceProviderFactory {
	mock := &MockServiceProviderFactory{ctrl: ctrl}
	mock.recorder = &_MockServiceProviderFactoryRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockServiceProviderFactory) EXPECT() *_MockServiceProviderFactoryRecorder {
	return _m.recorder
}

// NewDiscoveryProvider mocks base method
func (_m *MockServiceProviderFactory) NewDiscoveryProvider(_param0 apiconfig.Config) (apifabclient.DiscoveryProvider, error) {
	ret := _m.ctrl.Call(_m, "NewDiscoveryProvider", _param0)
	ret0, _ := ret[0].(apifabclient.DiscoveryProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewDiscoveryProvider indicates an expected call of NewDiscoveryProvider
func (_mr *_MockServiceProviderFactoryRecorder) NewDiscoveryProvider(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewDiscoveryProvider", arg0)
}

// NewSelectionProvider mocks base method
func (_m *MockServiceProviderFactory) NewSelectionProvider(_param0 apiconfig.Config) (apifabclient.SelectionProvider, error) {
	ret := _m.ctrl.Call(_m, "NewSelectionProvider", _param0)
	ret0, _ := ret[0].(apifabclient.SelectionProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewSelectionProvider indicates an expected call of NewSelectionProvider
func (_mr *_MockServiceProviderFactoryRecorder) NewSelectionProvider(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewSelectionProvider", arg0)
}

// MockOrgClientFactory interface
type MockOrgClientFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockOrgClientFactoryRecorder
}

// Recorder for MockOrgClientFactory (not exported)
type _MockOrgClientFactoryRecorder struct {
	mock *MockOrgClientFactory
}

// NewMockOrgClientFactory creates a new mock instance
func NewMockOrgClientFactory(ctrl *gomock.Controller) *MockOrgClientFactory {
	mock := &MockOrgClientFactory{ctrl: ctrl}
	mock.recorder = &_MockOrgClientFactoryRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockOrgClientFactory) EXPECT() *_MockOrgClientFactoryRecorder {
	return _m.recorder
}

// NewCredentialManager mocks base method
func (_m *MockOrgClientFactory) NewCredentialManager(_param0 string, _param1 apiconfig.Config, _param2 apicryptosuite.CryptoSuite) (apifabclient.CredentialManager, error) {
	ret := _m.ctrl.Call(_m, "NewCredentialManager", _param0, _param1, _param2)
	ret0, _ := ret[0].(apifabclient.CredentialManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewCredentialManager indicates an expected call of NewCredentialManager
func (_mr *_MockOrgClientFactoryRecorder) NewCredentialManager(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewCredentialManager", arg0, arg1, arg2)
}

// MockSessionClientFactory interface
type MockSessionClientFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockSessionClientFactoryRecorder
}

// Recorder for MockSessionClientFactory (not exported)
type _MockSessionClientFactoryRecorder struct {
	mock *MockSessionClientFactory
}

// NewMockSessionClientFactory creates a new mock instance
func NewMockSessionClientFactory(ctrl *gomock.Controller) *MockSessionClientFactory {
	mock := &MockSessionClientFactory{ctrl: ctrl}
	mock.recorder = &_MockSessionClientFactoryRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockSessionClientFactory) EXPECT() *_MockSessionClientFactoryRecorder {
	return _m.recorder
}

//NewChannelClient new channel client
func (_m *MockSessionClientFactory) NewChannelClient(_param0 api.Providers, _param1 api.SessionContext, _param2 string, _param3 apifabclient.TargetFilter) (chclient.ChannelClient, error) {
	ret := _m.ctrl.Call(_m, "NewChannelClient", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(chclient.ChannelClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewChannelClient indicates an expected call of NewChannelClient
func (_mr *_MockSessionClientFactoryRecorder) NewChannelClient(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewChannelClient", arg0, arg1, arg2, arg3)
}

// New mocks base method
func (_m *MockSessionClientFactory) NewResourceMgmtClient(_param0 api.Providers, _param1 api.SessionContext, _param2 resmgmtclient.TargetFilter) (resmgmtclient.ResourceMgmtClient, error) {
	ret := _m.ctrl.Call(_m, "NewResourceMgmtClient", _param0, _param1, _param2)
	ret0, _ := ret[0].(resmgmtclient.ResourceMgmtClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New
func (_mr *_MockSessionClientFactoryRecorder) NewResourceMgmtClient(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewResourceMgmtClient", arg0, arg1, arg2)
}
