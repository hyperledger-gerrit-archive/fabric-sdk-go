// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hyperledger/fabric-sdk-go/def/fabapi/context (interfaces: SDK)

package mock_context

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apiconfig "github.com/hyperledger/fabric-sdk-go/api/apiconfig"
	apicore "github.com/hyperledger/fabric-sdk-go/api/apicore"
	apicryptosuite "github.com/hyperledger/fabric-sdk-go/api/apicryptosuite"
	apifabclient "github.com/hyperledger/fabric-sdk-go/api/apifabclient"
)

// MockSDK is a mock of SDK interface
type MockSDK struct {
	ctrl     *gomock.Controller
	recorder *MockSDKMockRecorder
}

// MockSDKMockRecorder is the mock recorder for MockSDK
type MockSDKMockRecorder struct {
	mock *MockSDK
}

// NewMockSDK creates a new mock instance
func NewMockSDK(ctrl *gomock.Controller) *MockSDK {
	mock := &MockSDK{ctrl: ctrl}
	mock.recorder = &MockSDKMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockSDK) EXPECT() *MockSDKMockRecorder {
	return _m.recorder
}

// ConfigProvider mocks base method
func (_m *MockSDK) ConfigProvider() apiconfig.Config {
	ret := _m.ctrl.Call(_m, "ConfigProvider")
	ret0, _ := ret[0].(apiconfig.Config)
	return ret0
}

// ConfigProvider indicates an expected call of ConfigProvider
func (_mr *MockSDKMockRecorder) ConfigProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ConfigProvider", reflect.TypeOf((*MockSDK)(nil).ConfigProvider))
}

// CryptoSuiteProvider mocks base method
func (_m *MockSDK) CryptoSuiteProvider() apicryptosuite.CryptoSuite {
	ret := _m.ctrl.Call(_m, "CryptoSuiteProvider")
	ret0, _ := ret[0].(apicryptosuite.CryptoSuite)
	return ret0
}

// CryptoSuiteProvider indicates an expected call of CryptoSuiteProvider
func (_mr *MockSDKMockRecorder) CryptoSuiteProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CryptoSuiteProvider", reflect.TypeOf((*MockSDK)(nil).CryptoSuiteProvider))
}

// DiscoveryProvider mocks base method
func (_m *MockSDK) DiscoveryProvider() apifabclient.DiscoveryProvider {
	ret := _m.ctrl.Call(_m, "DiscoveryProvider")
	ret0, _ := ret[0].(apifabclient.DiscoveryProvider)
	return ret0
}

// DiscoveryProvider indicates an expected call of DiscoveryProvider
func (_mr *MockSDKMockRecorder) DiscoveryProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "DiscoveryProvider", reflect.TypeOf((*MockSDK)(nil).DiscoveryProvider))
}

// FabricProvider mocks base method
func (_m *MockSDK) FabricProvider() apicore.FabricProvider {
	ret := _m.ctrl.Call(_m, "FabricProvider")
	ret0, _ := ret[0].(apicore.FabricProvider)
	return ret0
}

// FabricProvider indicates an expected call of FabricProvider
func (_mr *MockSDKMockRecorder) FabricProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "FabricProvider", reflect.TypeOf((*MockSDK)(nil).FabricProvider))
}

// SelectionProvider mocks base method
func (_m *MockSDK) SelectionProvider() apifabclient.SelectionProvider {
	ret := _m.ctrl.Call(_m, "SelectionProvider")
	ret0, _ := ret[0].(apifabclient.SelectionProvider)
	return ret0
}

// SelectionProvider indicates an expected call of SelectionProvider
func (_mr *MockSDKMockRecorder) SelectionProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SelectionProvider", reflect.TypeOf((*MockSDK)(nil).SelectionProvider))
}

// SigningManager mocks base method
func (_m *MockSDK) SigningManager() apifabclient.SigningManager {
	ret := _m.ctrl.Call(_m, "SigningManager")
	ret0, _ := ret[0].(apifabclient.SigningManager)
	return ret0
}

// SigningManager indicates an expected call of SigningManager
func (_mr *MockSDKMockRecorder) SigningManager() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SigningManager", reflect.TypeOf((*MockSDK)(nil).SigningManager))
}

// StateStoreProvider mocks base method
func (_m *MockSDK) StateStoreProvider() apifabclient.KeyValueStore {
	ret := _m.ctrl.Call(_m, "StateStoreProvider")
	ret0, _ := ret[0].(apifabclient.KeyValueStore)
	return ret0
}

// StateStoreProvider indicates an expected call of StateStoreProvider
func (_mr *MockSDKMockRecorder) StateStoreProvider() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "StateStoreProvider", reflect.TypeOf((*MockSDK)(nil).StateStoreProvider))
}
